version: '3'
services:
  product-service:
    image: productservice:0.0.2-SNAPSHOT
    environment:
      OTEL_SERVICE_NAME: "product-service"
      OTEL_TRACES_EXPORTER: "jaeger,zipkin"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "logging"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - jaeger
      - zipkin

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    restart: always
    ports:
      - "9191:9090"
    depends_on:
      - product-service

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OLTP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "14250"

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: productservice
      POSTGRES_USERNAME: username
      POSTGRES_PASSWORD: password
    ports:
      - "5430:5432"